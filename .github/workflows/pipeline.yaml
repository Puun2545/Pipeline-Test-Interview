name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ github.sha }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          cd src
          docker build -t puunvach/nodejs-app:${{ github.sha }} .
          docker push puunvach/nodejs-app:${{ github.sha }}


  setDeploymentEnv:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Image in Kubernetes Manifest
        run: |
          sed -i 's|puunvach/nodejs-app:.*|puunvach/nodejs-app:${{ github.sha }}|' k8s/deployment.yaml

      - name: Commit & Push Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add k8s/deployment.yaml
          git commit -m "Update image to puunvach/nodejs-app:${{ github.sha }}"
          git push

  deploy:
    runs-on: ubuntu-latest
    needs: setDeploymentEnv
    steps:
      - name: Set Execute Permission for Script
        run: chmod +x scripts/deploy-argocd.sh

      - name: Run Deployment Script
        env:
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
          ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
          ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
        run: ./scripts/deploy-argocd.sh

  serviceCheck:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Set Execute Permission for Script
        run: kubectl get svc nodejs-service

